
# Dockable Probe
[dockable_probe]
pin: ^zaxis:PC15 # connected to X endstop on Z-axis board
x_offset: -25.0 # offset for microswitch x direction off nozzle
y_offset: -1.95 # offset for microswitch y direction off nozzle
z_offset: 9 # offset for microswitch in z height - this is a starting point only
samples: 3
sample_retract_dist: 3
samples_result: median
samples_tolerance: 0.02
samples_tolerance_retries: 3
speed: 3
lift_speed: 25

# annexed probe specific
dock_position:             -8,181,20 #back left corner of gantry
approach_position:         32,181,20
detach_position:           -8,141,20
attach_speed:              20
detach_speed:              100
travel_speed:              300
check_open_attach:         True
dock_retries:              1

# TODO: Remove this after testing.
# #   Optional custom gcode sections for annexed probe
# pre_attach_gcode:
#     G1 X40 Y40 F18000    #keep umbilical from catching on stuff
# pre_detach_gcode:
#     G1 X40 Y40 F18000   #keep umbilical from catching on stuff
#     
# post_attach_gcode:
#     G1 X40 Y181 F18000   # Exit the probe dock before continuing (no more probes in the purge bucket)
# post_detach_gcode:
#     G1 X40 Y181 F18000   # After detaching, return to reasonable position


# Z Tilt Bed Adjustment settings
[z_tilt]
#3 Z Motors
z_positions: 
    -74.0, -18.0    # Front Left
    76.0,  217.0    # Rear
    226.0, -18.0    # Front Right
points:
    45, 25          # Front Left
    101, 160        # Rear
    175, 25         # Front Right
speed: 350
horizontal_move_z: 20.0
retries: 4
retry_tolerance: 0.01

# Mesh Bed Settings
[bed_mesh]
speed: 350
horizontal_move_z: 20.0
mesh_min: 20,25
mesh_max: 150, 155
probe_count: 5,5
fade_start: 0.5
fade_end: 2
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.1
# relative_reference_index: 12  # ^^^because were measuring the offset from the nozzle switch to the bed using the center of the bed, the equation to find the location = (probe point count)/2-1

# Sensorless homing with a reduced current.

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    G90
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={RUN_CURRENT_X}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y10 F1200
    G90
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={RUN_CURRENT_Y}


# Use our code for homing.
[homing_override]
axes: xyz
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    {% if home_all or 'X' in params %}
        _HOME_X
    {% endif %}
    {% if home_all or 'Y' in params %}
        _HOME_Y
    {% endif %}
    {% if home_all or 'Z' in params %}
        G28 Z
    {% endif %}
